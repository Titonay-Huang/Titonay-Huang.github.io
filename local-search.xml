<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo + Github pages 实现个人博客</title>
    <link href="/2024/12/22/Hexo-Github-pages-%E5%AE%9E%E7%8E%B0%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/12/22/Hexo-Github-pages-%E5%AE%9E%E7%8E%B0%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Github-pages-实现个人博客"><a href="#Hexo-Github-pages-实现个人博客" class="headerlink" title="Hexo + Github pages 实现个人博客"></a>Hexo + Github pages 实现个人博客</h1><h3 id="一、过程总览和回顾"><a href="#一、过程总览和回顾" class="headerlink" title="一、过程总览和回顾"></a>一、过程总览和回顾</h3><p>我是新手，2024&#x2F;12&#x2F;21号尝试着自己搭建自己的个人博客网站，起初是只想着在自己本地电脑环境上搭建  </p><p>一开始使用了Hugo，据说是世界上最快的静态网页生成器，但是捣鼓了一个下午，无功而返  </p><ul><li><p>第一个原因：阅读官方文档不够仔细</p></li><li><p>第二个原因：初步搜索不到Hugo相关主题的配置</p></li><li><p>第三个原因：对Hugo主题配置的繁琐感到恐惧</p></li></ul><p>一直尝试到晚上，用到一个<code>hugo-theme-air</code>主题，勉强满足我对我的博客的期待，但是界面有些麻烦，不合心意  </p><p>于是开始尝试其他的静态网页生成器，于是他就出现了</p><p><code>Hexo + Github pages</code>  </p><p>现在先来说一下失败的案例<code>Hugo</code></p><h3 id="二、Hugo的错误摸索"><a href="#二、Hugo的错误摸索" class="headerlink" title="二、Hugo的错误摸索"></a>二、Hugo的错误摸索</h3><p>我使用Bing搜索引擎，找到了三个官方的文档链接  </p><p>1、这个应该是官方最新的文档，因为解决了我的不少疑惑：  </p><p><a href="https://gohugo.io/getting-started/quick-start/">Quick start | Hugo</a>  </p><p>2、下面这两个就是让我痛苦难受的两个残缺不全的文档：  </p><p><a href="https://www.gohugo.org/doc/overview/quickstart/">Hugo 快速开始指引 - Hugo中文文档</a>  </p><p><a href="https://www.gohugo.org/">Hugo中文文档</a>  </p><p>通过这几个文档，以及一些其他csdn上的文章，我最终成功放弃<code>Hugo</code>  </p><p>但尝试了一天，也不能说完全没有收获，爬山过程的风景也是不错的嘛，接下来还原一下当初的步骤：</p><h5 id="a-安装Hugo和Git"><a href="#a-安装Hugo和Git" class="headerlink" title="a. 安装Hugo和Git"></a>a. 安装Hugo和Git</h5><p><a href="https://gohugo.io/installation/">Hugo 安装</a>  </p><p><a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">Git 安装</a>  </p><h5 id="b-构建站点并尝试运行"><a href="#b-构建站点并尝试运行" class="headerlink" title="b. 构建站点并尝试运行"></a>b. 构建站点并尝试运行</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hugo new site quickstart<br><span class="hljs-built_in">cd</span> quickstart<br>git init<br>git submodule add https://github.com/theNewDynamic/gohugo<span class="hljs-literal">-theme-ananke</span>.git themes/ananke<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;theme = &#x27;ananke&#x27;&quot;</span> &gt;&gt; hugo.toml<br>hugo server<br></code></pre></td></tr></table></figure><h5 id="c-撰写内容"><a href="#c-撰写内容" class="headerlink" title="c. 撰写内容"></a>c. 撰写内容</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell">hugo new content content/posts/my<span class="hljs-literal">-first-post</span>.md<br>vim content/posts/my<span class="hljs-literal">-first-post</span>.md<br></code></pre></td></tr></table></figure><h5 id="d-配置站点"><a href="#d-配置站点" class="headerlink" title="d. 配置站点"></a>d. 配置站点</h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">vim hugo.toml<br><br>baseURL = <span class="hljs-string">&#x27;https://example.org/&#x27;</span><br>languageCode = <span class="hljs-string">&#x27;en-us&#x27;</span><br>title = <span class="hljs-string">&#x27;My New Hugo Site&#x27;</span><br>theme = <span class="hljs-string">&#x27;ananke&#x27;</span><br></code></pre></td></tr></table></figure><h5 id="e-运行站点"><a href="#e-运行站点" class="headerlink" title="e. 运行站点"></a>e. 运行站点</h5><p><code>hugo server -D</code>  </p><p>总结：亲身实践是成功的，就是配置比较难</p><h3 id="三、Hexo-Github-Pages"><a href="#三、Hexo-Github-Pages" class="headerlink" title="三、Hexo + Github Pages"></a>三、Hexo + Github Pages</h3><p>我是跟着csdn上的优秀文章来操作的</p><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">GitHub Pages + Hexo搭建个人博客网站，史上最全教程_hexo博客-CSDN博客</a>  </p><h5 id="1-创建Github仓库"><a href="#1-创建Github仓库" class="headerlink" title="1. 创建Github仓库"></a>1. 创建Github仓库</h5><ul><li><p>填写仓库名，格式必须为<code>&lt;用户名&gt;.github.io</code>，然后点击<code>Create repository</code></p></li><li><p>点击<code>creating a new file</code>创建一个新文件，作为我们网站的主页</p></li><li><p>新文件的名字必须为<code>index.html</code>，内容先随便写一个，填写之后点击<code>Commit new file</code>提交</p></li><li><p>查看自己的博客链接并尝试访问</p><p><img src="/2024/12/22/Hexo-Github-pages-%E5%AE%9E%E7%8E%B0%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/image-20241222150534683.png"></p></li></ul><h5 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2. 安装Hexo"></a>2. 安装Hexo</h5><p>安装<code>Hexo</code> </p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br>hexo -v<br></code></pre></td></tr></table></figure><p>  创建项目并初始化</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">hexo init hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>cd hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><p>本地启动</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo g<br>hexo s<br>或者<br>hexo <span class="hljs-keyword">generate</span><br>hexo server<br></code></pre></td></tr></table></figure><h5 id="3-下载主题"><a href="#3-下载主题" class="headerlink" title="3. 下载主题"></a>3. 下载主题</h5><p>下载Fluid主题（复制仓库clone链接）</p><p><a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid 官网</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure><h5 id="4-指定主题"><a href="#4-指定主题" class="headerlink" title="4. 指定主题"></a>4. 指定主题</h5><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid  <span class="hljs-meta"># 指定主题</span><br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN  <span class="hljs-meta"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><h5 id="5-创建-关于页"><a href="#5-创建-关于页" class="headerlink" title="5. 创建 关于页"></a>5. 创建 <em><strong>关于页</strong></em></h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">hexo</span> <span class="hljs-string">new</span> <span class="hljs-string">page</span> <span class="hljs-string">about</span><br><br><span class="hljs-string">vim</span> <span class="hljs-string">/source/about/index.md</span><br><br><span class="hljs-string">修改后的文件示例如下：</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2020-02-23 19:20:33</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><h5 id="6-创建-文章"><a href="#6-创建-文章" class="headerlink" title="6.创建 文章"></a>6.创建 <em><strong>文章</strong></em></h5><p>执行如下命令创建一篇新文章，名为《测试文章》</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">hexo <span class="hljs-built_in">new</span> <span class="hljs-built_in">post</span> First.md<br></code></pre></td></tr></table></figure><p>执行完成后在<code>source\_posts</code>目录下生成了一个md文件，即博客文章</p><h5 id="7-个性化页面展示"><a href="#7-个性化页面展示" class="headerlink" title="7. 个性化页面展示"></a>7. 个性化页面展示</h5><p>a、浏览器的标签页名称</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vbnet">vim _config.yml<br><br># Site<br><span class="hljs-symbol">title:</span> <br><span class="hljs-symbol">subtitle:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">description:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><span class="hljs-symbol">author:</span> <span class="hljs-comment">&#x27;&#x27;</span><br><br># language<br><span class="hljs-symbol">language:</span> zh-CN<br></code></pre></td></tr></table></figure><p>b、博客标题</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs applescript">vim themes/fluid/_config.yml<br><br><span class="hljs-comment"># 要修改的字段</span><br><span class="hljs-number">1</span>、blog_title<br><span class="hljs-number">2</span>、<span class="hljs-built_in">text</span><br></code></pre></td></tr></table></figure><h5 id="8-绑定Github仓库，发布到Pages"><a href="#8-绑定Github仓库，发布到Pages" class="headerlink" title="8. 绑定Github仓库，发布到Pages"></a>8. 绑定Github仓库，发布到Pages</h5><p>安装hexo-deployer-git</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>修改_config.yml</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br>type；git<br><span class="hljs-symbol">repo:</span>  https:<span class="hljs-comment">//github.com/xxx/xxx.github.io.git</span><br><span class="hljs-symbol">branch:</span> master<br><span class="hljs-symbol">token:</span> <br></code></pre></td></tr></table></figure><p>其中 <code>token</code> 为 <code>GitHub</code> 的 <code>Personal access tokens</code>，获取方式如下图</p><p><img src="/2024/12/22/Hexo-Github-pages-%E5%AE%9E%E7%8E%B0%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/767d206b7cf26f90b17705f170db40fa.png" alt="PAT密钥获取方法">  </p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> g -d    <span class="hljs-comment"># 部署到Pages</span><br></code></pre></td></tr></table></figure><p>访问博客地址 <a href="https://titonay-huang.github.io/">https://titonay-huang.github.io/</a></p><p>如果这个方法不行，可以参照以下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo -<span class="hljs-selector-tag">g</span><br></code></pre></td></tr></table></figure><p>项目根目录下会有public文件夹  </p><p>1、把public文件夹的内容拖取到Github仓库里即可实现Github Pages访问  </p><p>2、把public文件夹作为nginx，apache或者tomcat等web服务器的根目录，实现静态访问</p><h3 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h3><p>虽然搬运的水分很大，但这就是我的第一篇博客啦，希望我在计算机领域持续深耕并且有所建树</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
